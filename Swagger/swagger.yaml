swagger: "2.0"
info:
  version: "1.0.0"
  title: "To do api"
host: "localhost:8080"
tags:
  - name: "Accounts"
    description: "Operations with Accounts"
  - name: "User"
    description: "Operations about user"
schemes:
  - "http"
  - "https"
paths:
  /accounts:
    post:
      tags:
        - "Accounts"
      summary: "Add new account"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Account"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/AccountResponse"
        "421":
          description: "No name"
          schema:
            $ref: "#/definitions/Error"
      security:
        - Bearer: []
    get:
      tags:
        - "Accounts"
      summary: "Get accounts"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountResponse"
        "204":
          description: "No accounts"
          schema:
            $ref: "#/definitions/Error"
      security:
        - Bearer: []
  /accounts/{id}:
    delete:
      tags:
        - "Accounts"
      summary: "Delete account"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Success"
      security:
        - Bearer: []
    put:
      tags:
        - "Accounts"
      summary: "Update  account"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/UpdatedAccount"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountResponse"
        "421":
          description: "No name"
          schema:
            $ref: "#/definitions/Error"
      security:
        - Bearer: []
  /register:
    post:
      tags:
        - "User"
      summary: "Create user"
      description: "A password should be alphanumeric.First letter of the password should be capital.Password must contain a special character (@, $, !, &, etc).Password length must be greater than 8 characters"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "204":
          description: "Success"
        "403":
          description: "User exist"
          schema:
            $ref: "#/definitions/Error"
        "421":
          description: "Invalid password"
          schema:
            $ref: "#/definitions/Error"
  /login:
    post:
      tags:
        - "User"
      summary: "User login"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JwtResponse"
        "401":
          description: "Invalid password or name"
          schema:
            $ref: "#/definitions/Error"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: "object"
    properties:
      name:
        type: "string"
      password:
        type: "string"
  Account:
    type: "object"
    properties:
      name:
        type: "string"
      bank_account_number:
        type: "number"
  UpdatedAccount:
    type: "object"
    properties:
      name:
        type: "string"
      bank_account_number:
        type: "number"
      sum:
        type: "number"
  Error:
    type: "object"
    properties:
      statusCode:
        type: "integer"
        format: "int32"
      err:
        type: "string"
  AccountResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      user_id:
        $ref: "#/definitions/identificator"
      name:
        type: "string"
      bank_account_number:
        type: "number"
      sum:
        type: "number"
  JwtResponse:
    type: "object"
    properties:
      token:
        type: "string"
  identificator:
    type: "integer"
